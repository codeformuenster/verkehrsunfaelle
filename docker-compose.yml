version: "2.4"

services:
  importer: &python
    build: ./processing
    volumes:
      - ./data:/data
      - ./processing:/processing
      - ./kinto:/kinto
    command: python processing/importer.py
    environment:
      KINTO_URL: http://kinto:8888/v1
      KINTO_ADMIN: admin
      KINTO_ADMIN_PASSWORD: banane
    depends_on:
      kinto:
        condition: service_healthy

  initializer:
    <<: *python
    restart: "no"
    command: bash /kinto/init.sh

  geocoder:
    <<: *python
    restart: "no"
    command: python processing/geocoder.py
    depends_on:
      kinto:
        condition: service_healthy
      nominatim:
        condition: service_started
      overpass:
        condition: service_started

  kinto:
    image: kinto/kinto-server:13.1.1
    ports:
      - 8888:8888
    volumes:
      - ./kinto/config:/etc/kinto
    healthcheck:
      test:
        - CMD-SHELL
        - >-
          python -c "import requests; requests.get('http://localhost:8888/')"
      interval: 10s
      timeout: 5s
      retries: 5
    depends_on:
      postgres:
        condition: service_healthy

  postgres:
    image: postgres:11-alpine
    environment:
      POSTGRES_USER: accidents
      POSTGRES_PASSWORD: PASSWORD
    volumes:
      - ./postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U accidents"]
      interval: 10s
      timeout: 5s
      retries: 5

  random-accident:
    build:
      context: random-accident
    ports:
      - "9000:9000"
    environment:
      POSTGRES_URL: postgresql://accidents:PASSWORD@postgres/accidents
    depends_on:
      postgres:
        condition: service_healthy

  nominatim-import:
    image: mediagis/nominatim:3.1
    volumes:
      - ./nominatim/muenster-regbez-latest.osm.pbf:/data/dump.osm.pbf
      - ./nominatim/postgres_data:/data/postgres_data
    command: sh /app/init.sh /data/dump.osm.pbf postgres_data 4

  nominatim:
    image: mediagis/nominatim:3.1
    volumes:
      - ./nominatim/postgres_data:/var/lib/postgresql/9.5/main
    ports:
      - "8080:8080"
    command: bash /app/start.sh

  overpass:
    image: wiktorn/overpass-api:0.7.55
    environment:
      OVERPASS_PLANET_URL: file:///planet/muenster-regbez-latest.osm.bz2
    volumes:
      - ./overpass/db:/db
      - ./overpass/muenster-regbez-latest.osm.bz2:/planet/muenster-regbez-latest.osm.bz2
      - ./overpass/supervisord.conf:/etc/supervisor/conf.d/supervisord.conf
      - ./overpass/docker-entrypoint.sh:/app/docker-entrypoint.sh
    ports:
      - "80:80"
